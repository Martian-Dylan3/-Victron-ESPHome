esphome:
  name: victron-mppt
  friendly_name: Victron MPPT

esp8266:
  board: d1_mini

external_components:
  - source: github://Martian-Dylan3/Victron_ESPHome@main
    refresh: 0s

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

logger:
api:
ota:

time:
  - platform: homeassistant

uart:
  id: uart_bus
  tx_pin: D7  # Not connected! The communication is read-only
  rx_pin: D8  # Connect this this GPIO and GND to the MPPT charger
  baud_rate: 19200
  stop_bits: 1
  data_bits: 8
  parity: NONE
  rx_buffer_size: 256

status_led:
  pin:
    number: 2
    inverted: no

victron:
  id: victron0
  uart_id: uart_bus
  throttle: 10s

sensor:
  - platform: victron
    victron_id: victron0
    panel_voltage:
      name: "Panel voltage"
      id: pv
    battery_voltage:
      name: "Battery voltage"
      id: bv
    battery_current:
      name: "Battery current"
      id: bc
    load_current:
      name: "Load current"
      id: load_current
    max_power_yesterday:
      name: "Max power yesterday"
      id: max_power_yesterday
    max_power_today:
      name: "Max power today"
      id: max_power_today
      accuracy_decimals: 2
    yield_total:
      name: "Yield total"
      id: yield_total
      filters:
        # Multiplication factor from W to kW is 0.001
        - multiply: 0.001
      unit_of_measurement: kWh
      accuracy_decimals: 2
    yield_yesterday:
      name: "Yield yesterday"
      id: yield_yesterday
      filters:
        # Multiplication factor from W to kW is 0.001
        - multiply: 0.001
      unit_of_measurement: kWh
      accuracy_decimals: 2
    yield_today:
      name: "Yield today"
      id: yt
      filters:
        # Multiplication factor from W to kW is 0.001
        - multiply: 0.001
      unit_of_measurement: kWh
      accuracy_decimals: 2
    panel_power:
      name: "Panel power"
      id: panel_power
    day_number:
      name: "Day sequence number"
      id: day_number
      icon: "mdi:calendar-today"
    charging_mode_id:
      name: "Charger mode id"
    error_code:
      name: "Error code"
    tracking_mode_id:
      name: "Tracker mode id"

  - platform: wifi_signal
    name: "SmartSolar WiFi Signal Sensor"
    id: rssi_sensor
    update_interval: 15s

  - platform: template
    name: "Wifi Quality"
    unit_of_measurement: "%"
    accuracy_decimals: 0
    icon: "mdi:wifi"
    update_interval: 15s
    lambda: |-
        int quality;
        const int rssi = id(rssi_sensor).state;
        if (rssi <= -100) {
          quality = 0;
        } else if (rssi >= -50) {
          quality = 100;
        } else {
          quality = 2 * (rssi + 100);
        }
        return quality;
  - platform: uptime
    name: "SmartSolar Uptime"
    id: uptime_s
    update_interval: 5s

  - platform: template  # for 1 cell of battery
    name: "Bat S1 "     # 7S pack
    lambda: |-
      if ((((id(bv).state) / 7) > 4.22) && (((id(bv).state) / 7) < 3.2)) {
        return NAN;
      }
      return ((id(bv).state) / 7);
    update_interval: 10s
    icon: "mdi:battery"
    unit_of_measurement: V
    device_class: "voltage"
    accuracy_decimals: 2
  - platform: template           # Battery working percent
    name: "Bat working percent"  # cycle batt between 3,7v - 4.17v
    lambda: |-
      if (((((((((id(bv).state) / 7 )) - 3.700) / (4.170 - 3.700)) * 100)) >= 115) && ((((((((id(bv).state) / 7 )) - 3.700) / (4.170 - 3.700)) * 100)) <= -25)) {
        return NAN;
      }
      return ((((((id(bv).state) / 7 )) - 3.700) / (4.170 - 3.700)  ) * 100);
    update_interval: 15s
    icon: "mdi:battery"
    unit_of_measurement: "%"
    device_class: "voltage"
    accuracy_decimals: 2

  - platform: template   # FVE percent
    name: "FVE percent"  # 500Wp max power of my FVE grid
    lambda: |-
        if (((((id(panel_power).state) / 500) * 100) >= 120) && ((((id(panel_power).state) / 500) * 100) < 0)) {
          return NAN;
        }
        return (((id(panel_power).state) / 500) * 100);
    icon: "mdi:gauge"
    unit_of_measurement: "%"
    device_class: "power"
    accuracy_decimals: 2
    update_interval: 15s

  - platform: template   # median generated day energy
    name: "Day median generated "  # 500Wp max power of my FVE grid
    lambda: |-
        return (id(yield_total).state) / (id(day_number).state);
    update_interval: 15s
    icon: "mdi:gauge"
    unit_of_measurement: "kWh"
    device_class: "power"
    accuracy_decimals: 2

text_sensor:
  - platform: victron
    victron_id: victron0
    charging_mode:
      name: "Charging Mode"
    error:
      name: "Error"
    tracking_mode:
      name: "Tracking Mode"
    firmware_version:
      name: "Firmware Version"
    device_type:
      name: "Device Type"


  - platform: version
    name: "SmartSolar Esphome Version"
    icon: mdi:information-outline
  - platform: wifi_info
    ip_address:
      name: "SmartSolar IP Address"
      icon: mdi:ip
    ssid:
      name: "SmartSolar Connected SSID"
      icon: mdi:wifi
    bssid:
      name: "SmartSolar Connected BSSID"
    mac_address:
      name: "SmartSolar Mac Wifi Address"

switch:
  - platform: restart
    icon: mdi:reload-alert
    name: "SmartSolar Restart"
